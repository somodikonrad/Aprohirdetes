import { AppDataSource } from "../data-source";
import { Category } from "../entity/Category";
 
// üîπ Don't reinitialize AppDataSource in the seedDatabase!
async function seedDatabase() {
    try {
      const categoryRepository = AppDataSource.getRepository(Category);
 
      // A k√©rd√©sek, amiket hozz√° akarunk adni
      const categories = [
        {name: "Ingatlan"},
        {name: "G√©pj√°rm≈±"},
        {name: "H√°ztart√°si g√©p"},
        {name: "J√°t√©k"},
        {name: "Ruh√°zat"},
        {name: "Elektronika"},
        {name: "Szolg√°ltat√°s"},
        {name: "Sport √©s szabadid≈ë"},
        {name: "√Ållat"},
        {name: "Egy√©b"},
        
      ];
 
      for (const newCategory of categories) {
        // Ellen≈ërizz√ºk, hogy m√°r l√©tezik-e ugyanolyan k√©rd√©s az adatb√°zisban
        const existingCategories = await categoryRepository.findOne({ where: { name: newCategory.name } });
        if (!existingCategories) {
          // Ha nem l√©tezik, hozz√°adjuk
          await categoryRepository.save(newCategory);
          console.log(`‚úÖ Question added: "${newCategory.name}"`);
        } else {
          console.log(`‚ö†Ô∏è Question already exists: "${newCategory.name}", skipping.`);
        }
      }
 
    } catch (error) {
      console.error("‚ùå Error occurred during seeding:", error);
    }
}
 
export { seedDatabase }