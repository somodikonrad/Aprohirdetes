import { AppDataSource } from "../data-source";
import { Category } from "../entity/Category";

// üîπ Kateg√≥ri√°k seedel√©se (hozz√°ad√°s + t√∂rl√©s)
async function seedDatabase() {
  try {
    const categoryRepository = AppDataSource.getRepository(Category);

    // üîπ Az aktu√°lisan k√≠v√°nt kateg√≥ri√°k list√°ja, sz√≠nnel egy√ºtt
    const categories = [
      { name: "Ingatlan", color: "#FF5733" }, // Orange
      { name: "G√©pj√°rm≈±", color: "#007BFF" }, // Blue
      { name: "H√°ztart√°si g√©p", color: "#28A745" }, // Green
      { name: "J√°t√©k", color: "#FFC107" }, // Yellow
      { name: "Ruh√°zat", color: "#6F42C1" }, // Purple
      { name: "Elektronika", color: "#17A2B8" }, // Teal
      { name: "Szolg√°ltat√°s", color: "#FF6F61" }, // Coral
      { name: "Sport √©s szabadid≈ë", color: "#20C997" }, // Light Green
      { name: "√Ållat", color: "#FD7E14" }, // Orange Red
      { name: "Egy√©b", color: "#6C757D" }, // Grey
    ];

    // üîπ Megn√©zz√ºk, mi van jelenleg az adatb√°zisban
    const existingCategories = await categoryRepository.find();

    // üîπ T√∂r√∂lj√ºk azokat a kateg√≥ri√°kat, amelyek nincsenek a list√°ban
    for (const existingCategory of existingCategories) {
      if (!categories.some(c => c.name === existingCategory.name)) {
        await categoryRepository.remove(existingCategory);
        console.log(`üóëÔ∏è T√∂r√∂lve: "${existingCategory.name}"`);
      }
    }

    // üîπ √öj kateg√≥ri√°k hozz√°ad√°sa vagy friss√≠t√©s√ºk, ha nincs sz√≠n√ºk
    for (const newCategory of categories) {
      const existingCategory = await categoryRepository.findOne({ where: { name: newCategory.name } });
      if (!existingCategory) {
        // Save new category with color
        await categoryRepository.save(newCategory);
        console.log(`‚úÖ Hozz√°adva: "${newCategory.name}"`);
      } else {
        // If the category already exists and has no color, update it
        if (!existingCategory.color) {
          existingCategory.color = newCategory.color; // Set default color
          await categoryRepository.save(existingCategory);
          console.log(`‚úÖ Sz√≠n hozz√°adva: "${existingCategory.name}" - "${existingCategory.color}"`);
        } else {
          console.log(`‚ö†Ô∏è M√°r l√©tezik: "${existingCategory.name}", kihagyva.`);
        }
      }
    }

  } catch (error) {
    console.error("‚ùå Hiba t√∂rt√©nt a seedel√©s sor√°n:", error);
  }
}

export { seedDatabase };
